########### Flutter 의 대두
	#- 일반적으로
		2007년 IOS : Objective-C ==> Swift 형태로
		2008년 Android : Java ==> Kotlin 형태로
	#- 같은 앱을 2개로 나누어 개발에 문제발생
	#- 그래서 hybrid app 등이 대두w
		(hybrid app : html, css, js로 개발, 단, 아주 깊은 사양의 처리가 필요없는 경우에 좋다
		(phonehap) )
		
		native app : 중간 변환 없이 안드로이드 및 iOS의 기계어 코드로 작성되는 앱으로
			각각의 모바일 기기 의 특성에 깊은 사양까지 맞게 사용하고자 할때, 단
				안드로이드, iOS를 따로 개발해야)

	(참고) 추억의 앱스프레소
	
	#- 그후 2개를 한꺼번에 해결하는 cross-platform 으로 javascript base인 react native를 facebook에서 2015년에 만듬
	#- 이어서 2017년 google에서 flutter 가 나옴

#### ffutter 가 native app이 되기까지
	dart 언어(flutter api) + 위젯 코드 소스
	==> compile
	=> android, ios의 native code로 만들어짐 (kotlin, swift)
	
#.	flutter의 구조
	1) framwork : dart 언어로 작성, "everything is a widget" 처럼 위젯 중심,
			위젯은 class의 객체(instance), 카메라, 위치 관련 등의 플러그안
	2) engine : c c++로 작성되어 있고 dart compile 등 역할
	3) embedder : jit의 jvm처럼 android platform은 java, c, c++로 작성되고 ios platform은 object c, object c++로 작성, 
			native app을 위한 연결 부분 역할

#. UI design : 
	1) android : meterial design 으로 무엇을 누를지 직관적으로 알게되며
					version 5.0 lollipop 부터 적용시작
	2) ios : cupertino design
	(참고) flutter는 skia graphic library 내장으로 각 device 출력되는 UI화면 이 일관성있게 같은 style로 출력
####. flutter 다운로드 및 설치하기

#. flutter sdk 다운로드 및 압축풀기
https://flutter.dev/ 사이트에서 우측상단 getStarted 클릭

	- 보이는 install 화면에서 windows 선택
	- 약간 아래에서 flutter sdk 인 .zip 클릭하여 다운
	- 압축을 풀어 예를 들어 d:\flutterinstall 폴더에 설치

	#. 환경 변수 설정
- winkey + i - 시스템 - 맨아래 정보 - 우측  고급 시스템 설정 - 환경 변수
	(or 내 pc - 마오 - 속성 - 고급시스템 설정 - 환경변수)

	- 아래 시스템 변수 path에 - (편집-새로만들기) - D:\flutterinstall\flutter\bin 입력
	- 확인 - 확인 - 확인
#. flutter doctor 를 사용하여 설치된것 확인

	-. 윈도우 탐색기로 flutter 폴더로 간다
	-. 아무것도 선택 안한 후 shift + 마오, 여기서 powershell 창 열기..
	-. 나온 dos화면에서 flutter doctor 입력 - 엔터

####. 	Android Studio ( + SDK) 다운로드 및 설치
-	https://developer.android.com/studio 에서
	[download andriod studio] 클릭하여
	- 동의 체크 후 - download 버튼 클릭
	- 다운받음 Android Studio exe를
	예를 들어 D:\ans\anstudio 폴더까지 만들어
	해달 폴더에 설치
	-completed 후 -next
	... finish
	- start 후 "do not import settings" 선택 

welcome 화면 나오면
	Android-sdk 설치를 위해 next
	- custom 선택 -next
	- jdk 폴더는 ans에 내장된 open jdk 인
	디폴트 그대로 D:\ans\anstudio\jre 선택
	- next
	- ui 테마 중 상단 darcula or light 중 선택 -next -finish
	- 상단 큰제목 SDK Components setup 나오면
	- Andriod virtual device 도 체크
	- 아래 Andriod SDK locations 에서
		D:\ans\anstudio_sdk 폴더를 설정
		(만일 한번 standard로 처리한 경우)
		C:\users\사용자명\Appdata\local\andriod\sdk로 처리됨
	-next
	-emulator settings -next
	-finish
	
	(참고) 주요 java 통합개발툴 (JAVA IDE)
	1) Android Studio 는 인텔리제이 에서 개발한 java 통합개발툴 (IDE) 무료

####. Android Studio 로 아무 프로젝트 만들기
	file - new project
	-좌측 phone and tablet
	empty activity - next
	-name HelloAndroid
	-save Loaction은 자유
	-language 는 java
	-minimum sdk는 바로아래 %를 참조하여 선택
	-finish

####. Android Studio 에 flutter "플러그인" 하기
	상단 file-settings -Plugins - flutter 옆 [install] 클릭하여
	- third party 약관 -accept
	- dart plugin 할건지 install 클릭
	- install 버튼 자리에 보이는 [restart ide]를 누른다
	- restart - ok

- 시스템 변수 
ANDROID_HOME 만들어서
sdk 설정
C:\Users\user\AppData\Local\Android\Sdk

####. flutter 프로젝트 만들기
	기존 Android Studio 재실행
	file - new - new flutter project로 시작
	( or 상단 [new flutter project] 를 눌러 시작)
좌측 중간 flutter 선택 후 우측에 sdk 경로 입력,
얘룰 들면 ... 클릭하여 D:\flutterinstall\flutter 선택
- next
- 이름 HelloFlutter 2 주고 - project location 지정
	실제 이 이름은 모바일 폰의 어플 이름으로 적용되는데 추후 변경은 가능
- Android Language 를 java 선택후 finish

- // 일단 이것은 설명 생략 (open project - new windows 선택)
- 실행 : 화면 우상단 play 아이콘 클릭

==>(1) 디바이스 선택 크롬으로 실행


==>(2) avd로 실행 안드로이드 버츄얼 디바이스 인듯?
#####. AVD 만들기 no devices 에러 해결하기

우측 상단 AVD Manger 아이콘 클릭
	(가상기기 에뮬레이터 크리에이트 하여 우측 상단 안드로이드 머리+ 폰 아이콘 클릭)
- 	+create virtual device 클릭
	- 왼쪽에서 phone
	- 중간에 play store 표시가 있는 것 중 하나 선택
	- next - 맨위 앞 R download 를 클릭
		(우측 맨 아래 api level distribution char를 눌러봄)
	- accept 선택
	(예 : NEXUS 5 api 24 + 안드로이드 7.0 (구글플레이) + 너겟)을 찾아 선택
	- component installer 가동
	- finish

	-큰 제목 system image 에서
	- R 그대로 두고 -next
	- avd가 생성됨

####. avd 띄우기 ( 안드로이드 버전에 따라 뜨는 모양이 다름)
	우측 상단 "AVD Manager " 아이콘 클릭
	- your virtual device 가 뜨고 맨뒤 action의 play 아이콘을 누른다
	
	(main.dart가 보이는 초기화면 상단 콤보박스에서 우측 화살표 눌러
	open android emulator 누르면 avd가 뜬다

(참고) avd view mode - window or float

hot reload, but restart, Full Restart

1) hot reload (상단에 번개아이콘, 왼쪽 아래 터미널 창에도)
	소스 글자를 고치면 바로 반영됨
	즉, app 실행 중인데 변경사항이 바로 적용되어 실행됨
		(소스 고치기전 avd 를 화면에 띄워놓고 확인해보자)
main() 및 initState()는 호출 x, app state 유지 o, widget Trees는 다시 구성함
		예) 소스입력하면 자동저장, 평소 자동저장 단축키는 ctrl+s
		그러므로 일단 한번 run한 상태에서 몇글자 수정후 ctrl+s를 누르면
		hot reload가 되면서 실행 결과가 바로 적용되서 출력이 된다

2) hot restart ( 왼쪽 아래 터미널창)
	app state 유지 x, app new-start

3) Full Restart : 전부 다시 컴파일하고 실행

#. 프로젝트 구조
	1) Flutter COMPILE src code : android 폴더, ios 폴더
	2) pubspec.yaml : libaray, image 같은 resource 등에 대해 기술

#. lib에 다른 이름의 aa.dart 만들수 있다

shift +f6 -> 드래그한 문자열 다른 문자열로 바꾸기

###. Scaffold class(위젯)

        디자인의 골격 개념

###. AppBar        

        Android 의 TitleBar, IOS 의 Navigation Bar 개념

###. Body

        글씨, 버튼 등을 보여주는 화면의 center 영역

###. BottomNavigationBar

        다른 창으로 갈 수 있는 버튼들이 있는 영역으로
        Android의 Bottom Navigation Bar, IOS의 Tab Bar 개념
        여기에선 단순히 50픽셀 만큼 띄운 공간으로 세팅해 두었습니다.

###. FloatingActionButton

        floating 효과를 가지는 버튼

(참고) 단축키는 기본이 android studio 와 같다

#. 주석 : 자바와 같다
	// 
	// todo : 이건 나중에 몰아서 볼수도 있따 ( 화면 왼쪽하단의 TODO 탭 클릭)
#. 소스안에 주석등으로 달아논 url 주소로 바로 가는 방법
	해당 주소에 마우스 놓고 ctrl+ 마우스 클릭
# 주석색 & font
	file - setting - editor - color scheme - dart-line comment - 우측 아래 inherit from 체크 지우고 색 정함
	block comment 도 마찬가지로 색정함 - font - 17정도
#. 파일명 rename 단축키 or 파일내 단어 일괄 rename 하기
	shift + F6
#. 코드 정렬은 ctrl + alt + L 

#. 모든것은 위젯이다 widget으로 UI를 만든다
#. 위젯구조 
	MateriaApp(구글 Material 디자인 사용)
		|
		home
		|
		Scaffold(디자인 골격)
		|
	appBar		Body
	   |	 	  |
	text		text

###. 기본 원리
	#. widget tree
			-위젯이 widget tree에 등록시 화면으로 그려짐,
			반대일 때 화면에서 지워진다
		(참고) widget tree 보기
			flutter inspector 사용 : 우측 flutter inspector를 눌러 설명을 보고
				기다린 후 확인
			or 상단 view - tool windows - flutter inspector 를 눌러 확인

#####. 정렬 ( 반응형 웹 : flex )
	Row : 기본이 가로 가운데 정렬
		MainAxisAlignment : --> 방향
		CrossAxisAlignment : ↓ 방향

	Column : 기본이 세로 가운데 정렬
		MainAxisAlignment  : ↓
		CrossAxisAlignment : --> 방향
	//=================================
	Ex)))) 
	Row, CrossAxisAlignment.start
	가로 가운데, 맨위로 붙음

	Row, CrossAxisAlignment.center
	가로 가운데, 상하 center

	Row, CrossAxisAlignment.end
	가로 가운데, 맨아래로 붙음
	-------------------
	Row, MainAxisAlignment.start
	가로 가운데, 맨좌로 붙음
	
	Row, MainAxisAlignment.center
	가로 가운데, 좌우 center
	
	Row, MainAxisAlignment.end
	가로 가운데, 맨우로 붙음
	==============
	Column, MainAxisAlignment.start
	세로 가운데, 맨 위로 붙음
	
	Column, MainAxisAlignment.center
	세로 가운데, 상하 center

	Column, MainAxisAlignment.end
	세로 가운데, 맨 밑으로 붙음

	Column, CrossAxisAlignment.start
	세로 가운데, 맨 좌로 붙음
 
	Column, CrossAxisAlignment.center
	세로 가운데, 좌우 center 

	Column, CrossAxisAlignment.end
	세로 가운데, 맨 우로 붙음


####APK
	안드로이드의 확장자 .apk
	zip 이므로 apk -> zip -> 압축해제
assets : 이미지 & 폰트

lib : library
res : xml
AndroidMainfext.xml : 패키지명, 버전





	


























